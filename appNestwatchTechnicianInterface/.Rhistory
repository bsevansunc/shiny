#                                            'Total time open (minutes), 9 m nets:',
#                                            choices = choiceNetMinutes))),
#                 fluidRow(
#                   column(6, selectizeInput('netCount12', 'Number of 12 m nets:',
#                                            choices = choiceNetCount)),
#                   column(6, selectizeInput('netTime12',
#                                            'Total time open (minutes), 12 m nets:',
#                                            choices = choiceNetMinutes))),
#                 fluidRow(
#                   column(6, selectizeInput('netCount18', 'Number of 18 m nets:',
#                                            choices = choiceNetCount)),
#                   column(6, selectizeInput('netTime18',
#                                            'Total time open (minutes), 18 m nets:',
#                                            choices = choiceNetMinutes))),
#                 hr(),
#                 # ---- Resight effort --------------------------------------------
#                 h4(strong('Resight effort:')),
#                 br(),
#                 fluidRow(
#                   column(4, selectizeInput('startRsTime', 'Resight, start time:',
#                                            choices = choiceTimeOfDay)),
#                   column(4, selectizeInput('endRsTime', 'Resight, end time:',
#                                            choices = choiceTimeOfDay)),
#                   column(4, textInput('rsPathDistance',
#                                       'Path distance traveled (m):'))),
#                 br(),
#                 h5(strong('Observed, unbanded:')),
#                 fluidRow(column(1, 'AMRO'),
#                          column(2, selectizeInput(
#                            'amroUnbanded', label = NULL,
#                            choiceCount)),
#                          column(1, 'BCCH'),
#                          column(2, selectizeInput(
#                            'bcchUnbanded', label = NULL,
#                            choiceCount)),
#                          column(1, 'BRTH'),
#                          column(2, selectizeInput(
#                            'brthUnbanded', label = NULL,
#                            choiceCount)),
#                          column(1, 'CACH'),
#                          column(2, selectizeInput(
#                            'cachUnbanded', label = NULL,
#                            choiceCount))),
#                 fluidRow(column(1, 'CARW'),
#                          column(2, selectizeInput(
#                            'carwUnbanded', label = NULL,
#                            choiceCount)),
#                          column(1, 'EAPH'),
#                          column(2, selectizeInput(
#                            'eaphUnbanded', label = NULL,
#                            choiceCount)),
#                          column(1, 'GRCA'),
#                          column(2, selectizeInput(
#                            'grcaUnbanded', label = NULL,
#                            choiceCount)),
#                          column(1, 'HOWR'),
#                          column(2, selectizeInput(
#                            'howrUnbanded', label = NULL,
#                            choiceCount))),
#                 fluidRow(column(1, 'NOCA'),
#                          column(2, selectizeInput(
#                            'nocaUnbanded', label = NULL,
#                            choiceCount)),
#                          column(1, 'NOMO'),
#                          column(2, selectizeInput(
#                            'nomoUnbanded', label = NULL,
#                            choiceCount)),
#                          column(1, 'SOSP'),
#                          column(2, selectizeInput(
#                            'sospUnbanded', label = NULL,
#                            choiceCount)),
#                          column(1, 'TUTI'),
#                          column(2, selectizeInput(
#                            'tutiUnbanded', label = NULL,
#                            choiceCount))),
#                 fluidRow(column(1, 'UNCH'),
#                          column(2, selectizeInput(
#                            'unchUnbanded', label = NULL,
#                            choiceCount
#                          )),
#                          column(9, '')),
#                 hr(),
#                 h4(strong('Did you band or encounter a banded bird during your visit?')),
#                 radioButtons('encounteredBirds', label = NULL,
#                              choices = list('Yes' = 1, 'No' = 2),
#                              selected = 1),
#                 hr(),
#                 h4(strong('Visit notes:')),
#                 br(),
#                 # ---- Notes -----------------------------------------------------
#                 fluidRow(column(12, textInput('visitNotes',
#                                               label = NULL))),
#                 br(),
#                 actionButton("submitVisitData", "Submit visit data",
#                              class = "btn-primary"),
#                 shinyjs::hidden(
#                   div(
#                     id = "thankyou_msgVisit",
#                     h3("Thanks, your visit data have been recorded!")
#                   )
#                 ),
#                 width = 6, position = 'right'),
#             # ---- Visit text ----------------------------------------------------
#             mainPanel(
#               fluidRow(
#                 column(8,''),
#                 column(4, imageOutput('birdBranch1', height = 55))
#               ),
#               br(), textVisit, width = 6, position = 'left')
#             )
#            ),
#-------------------------------------------------------------------------------*
# ---- UI TAB PANEL: ENCOUNTERS ----
#-------------------------------------------------------------------------------*
tabPanel(strong('Encounter data'),
div(id = 'encounterData',
sidebarLayout(
# ---- Record entry -------------------------------------------------*
sidebarPanel(
shinyjs::useShinyjs(),
h3(strong('1. Enter encounter record:')),
strong(em('IMPORTANT! Be sure to enter encounter data AFTER entering visit data!')),
br(), br(),
fluidRow(
column(4,
selectInput('hubEnc','Regional Hub:',
choices = choiceRegions,
selected = NULL)),
column(4, selectInput('siteEnc', 'Site', '')),
column(4, dateInput('dateEnc',
label = 'Date: yyyy-mm-dd',
value = Sys.Date()
))
), br(),
fluidRow(
column(4, selectizeInput('bandTime', 'Time:',
choices = choiceTimeOfDay)),
column(4, textInput('observerEnc', 'Observer initials:')),
column(4, selectizeInput('encounterType',
'Encounter type:',
choices = choiceEncounterType,
selected = 'Band'))),
br(),
fluidRow(
column(4, selectInput('speciesEnc', 'Species:', '')),
column(4, textInput('bandNumber', 'Band number:')),
column(4, selectizeInput('colorCombo',
'Color combination:',
choices = choiceColorCombos))),
hr(),
h4(strong('Color bands:')),
fluidRow(
column(3, p(strong('- :'), 'No band')),
column(3, p(strong('BK :'), 'Black')),
column(3, p(strong('PK :'), 'Pink')),
column(3, p(strong('Y :'), 'Yellow'))
),
fluidRow(
column(3, p(strong('A :'), 'Aluminum')),
column(3, p(strong('G :'), 'Green')),
column(3, p(strong('P :'), 'Purple')),
column(3, p(strong('W :'), 'White'))
),
fluidRow(
column(3, p(strong('BU :'), 'Blue')),
column(3, p(strong('O :'), 'Orange')),
column(3, p(strong('R :'), 'Red')),
column(3, ' ')
),
hr(),
fluidRow(
column(3, selectizeInput('age','Age:',
choices = choiceAge)),
column(3, selectizeInput('sex', label = 'Sex:',
choices = choiceSex)),
column(3, selectizeInput('breedingCond', label = 'CP/BP:',
choices = choiceBreedingCond)),
column(3, selectizeInput('fat',label = 'Fat:',
choices = choiceFat))),
br(),
fluidRow(
column(3, textInput('mass',label = 'Mass (g):')),
column(3, textInput('wing',label = 'Wing (mm):')),
column(3, textInput('tl',label = 'Tail (mm):')),
column(3, textInput('tarsus',label = 'Tarsus (mm):'))),
br(),
fluidRow(
column(6, textInput('featherID', label = 'Feather ID:')),
column(6, textInput('toenailID', label = 'Toenail ID:'))),
br(),
fluidRow(
column(6, textInput('bloodID', label = 'Blood ID:')),
column(6, textInput('fecalID', label = 'Fecal ID:'))),
br(),
fluidRow(
column(6, textInput('attachmentID',
label = 'Attachment ID (e.g., transmitter or geolocator):')),
column(6, ' ')),
br(),
fluidRow(
column(6, textInput('rsLong', 'Resight longitude:')),
column(6, textInput('rsLat', 'Resight latitude:'))
),
br(),
fluidRow(
column(12, textInput('notesEnc', label = 'Notes:'))),
br(),
fluidRow(column(1, ''),
column(3, actionButton("newEnc", "Clear fields",
class = 'btn-primary')),
column(2, ''),
column(3, actionButton('submitEnc', 'Add record to table',
class = "btn-primary")),
column(3, '')),
br(),
width = 6, position = 'right'),
# ---- Encounter text ----------------------------------------------------
mainPanel(
introTextEncounter,
hr(),
fieldDescriptionsEncounter,
width = 6, position = 'left')
),
hr(),
# ---- QC and submission ---------------------------------------------------
h3(strong('2. Data-proofing and submission of encounter records:')),
br(),
DT::dataTableOutput("responsesEnc"),
br(),
fluidRow(column(1, ''),
column(4, actionButton("deleteEnc", "Delete record",
class = "btn-primary")),
column(3, ' '),
column(4, actionButton('submitEncData',
'Submit encounter data',
class = "btn-primary"))
),
br(),
shinyjs::hidden(
div(
id = "thankyou_msgEnc",
h3("Thanks, your encounter data have been recorded!")
)
),
br()
)),
#--------------------------------------------------------------------------------*
# ---- UI TAB PANEL: QUERY RECORDS ----
#--------------------------------------------------------------------------------*
#   tabPanel(strong('Query encounter records'),
#            sidebarLayout(
#              sidebarPanel(
#                br(),
#                fluidRow(
#                  column(10, selectInput('hubQuery','Hub:', choiceRegions)),
#                  column(2, '')),
#                fluidRow(
#                  column(10, selectInput('siteQuery', 'Site:', '')),
#                  column(2, '')),
#                hr(),
#                fluidRow(
#                  column(6, selectInput('speciesQuery', 'Species:', '')),
#                  column(6, selectInput('sexQuery', 'Sex:',
#                                        choices = c('ALL', choiceSex),
#                                        selected = 'ALL'))
#                ),
#                fluidRow(
#                  column(6, textInput('bandNumberQuery', 'Band number:', 'ALL')),
#                  column(6, textInput('bandComboQuery','Color combo:',  'ALL'))
#                ),
#                hr(),
#                fluidRow(
#                  column(10,
#                         selectizeInput('encounterTypeQuery', 'Encounter type:',
#                                        choices = c('ALL', choiceEncounterType))),
#                  column(2, '')),
#                width = 3, position = 'left'),
#              mainPanel(
#                textQuery,
#                hr(),
#                DT::dataTableOutput('encounterTable'),
#                        width = 9, position = 'right')
#            )),
#--------------------------------------------------------------------------------*
# ---- UI TAB PANEL: POINT COUNT ----
#--------------------------------------------------------------------------------*
tabPanel(strong('Point count data'),
sidebarLayout(
sidebarPanel(
div(id = 'pcData',
# ---- Point count entry ------------------------------------------
h3(strong('1. Add point count records:')),
strong(em('IMPORTANT! Be sure to enter point count data AFTER entering visit data!')),
br(), br(),
fluidRow(
column(4,
selectInput('hubPc','Regional Hub:',
choices = choiceRegions,
selected = NULL)),
column(4, selectInput('sitePc', 'Site', '')),
column(4, dateInput('datePc',
label = 'Date: yyyy-mm-dd',
value = Sys.Date()
))
), br(),
fluidRow(
column(4, textInput('observerPc', 'Observer:')),
column(4, selectizeInput('startTimePc', 'Start time:',
choices = choiceTimeOfDay)),
column(4, '')
),
hr(),
fluidRow(column(12, textInput('notesPc',
label = 'Point count notes:'))),
hr(),
textAouQuery,
fluidRow(column(11, DT::dataTableOutput('aouTable'))),
hr(),
fluidRow(
column(2, selectizeInput('timePc', 'Time:',
choices = choiceTime)),
column(3, selectizeInput('speciesPc',
'Species:',
choices = c('',justAlphaCode))),
column(2, selectizeInput('distancePc', 'Distance:',
choices = choiceDistance)),
column(2, selectizeInput('countPc', 'Count:',
choices = c('',1:100))),
column(3, selectizeInput('detectionPc',
'Detection:',
choices = c('', 'Visual','Auditory', 'Both')))
),
hr(),
fluidRow(column(1, ''),
column(3, actionButton("newPc", "Clear fields",
class = 'btn-primary')),
column(2, ''),
column(3, actionButton('submitPc', 'Add record to table',
class = "btn-primary")),
column(3, '')),
br()),
width = 6, position = 'right'),
# ---- PC text ----------------------------------------------------
mainPanel(
introTextPc,
hr(),
fieldDescriptionsPc,
# hr(),
# textAouQuery,
# fluidRow(column(11, DT::dataTableOutput('aouTable'))),
width = 6, position = 'left')
),
hr(),
# ---- QC and submission ---------------------------------------------------
h3(strong('2. Data-proofing and submission of point count records:')),
br(),
DT::dataTableOutput("responsesPc"),
br(),
fluidRow(column(1, ''),
column(4, actionButton("deletePc",
"Delete point count record",
class = "btn-primary")),
column(3, ' '),
column(4, actionButton('submitPcData',
'Submit point count data',
class = "btn-primary"))
),
br(), shinyjs::hidden(
div(
id = "thankyou_msgPc",
h3("Thanks, your point count data have been recorded!")
)
),
br()),
#-------------------------------------------------------------------------------*
# ---- UI TAB PANEL: NEST DATA ----
#-------------------------------------------------------------------------------*
tabPanel(strong('Nest data'),
sidebarLayout(
sidebarPanel(
div(id = 'summaryDataNest',
h3(strong('1. Submit nest location and summary data:')),
strong(em('IMPORTANT! Be sure to enter nest data AFTER entering visit data!')),
br(), br(),
shinyjs::hidden(textInput('hubNest', 'hub')),
fluidRow(
column(3, strong('Species:')),
column(3, strong('Color combo:')),
column(3, strong('FWS Bands:')),
column(3, strong('Nest: Yr-#'))
),
fluidRow(
column(3, selectInput('speciesNest', ' ', '')),
column(3, selectInput('colorComboMaleNest',
'Male:',
choices = choiceColorCombos)),
column(3, textInput('bandNumberMaleNest', 'Male:')),
column(3, textInput('nestID', ' '))
),
fluidRow(
column(3, ''),
column(3, selectInput('colorComboFemaleNest',
'Female:',
choices = choiceColorCombos)),
column(3, textInput('bandNumberFemaleNest', 'Female:')),
column(3, '')
),
hr(),
fluidRow(
column(9, ''),
column(3, tags$u(strong('Summary dates')))
),
fluidRow(
column(2, textInput('plotNest', 'Plot:')),
column(3, selectInput('siteNest', 'Grid (site):', '')),
column(4, selectInput('fateNest', 'Nest Fate:',
nestFateChoices)),
column(3, dateInput('dateClutchNest',
label = 'Clutch completion:',
value = ''))
),
fluidRow(
column(7, textInput('plantSpNest',
'Plant species (if applicable):')),
column(2, selectInput('heightNest', 'Nest ht (m):',
c('', 0:12), '')),
column(3, dateInput('dateHatchNest',
label = 'Hatch:',
value = ''))
),
fluidRow(
column(9, textInput('descriptionNest', 'Nest description:')),
column(3, dateInput('dateFledgeFailNest',
label = 'Fledge/fail (date):',
value = ''))
),
fluidRow(
column(3, selectInput('locationNest', 'Nest Location',
nestLocationChoices)),
column(9, textInput('notesFateOtherNest',
'If nest fate was "other", explain:'))
)
),
hr(),
div(id = 'nestData',
h3(strong('2. Add nest observation records:')),
strong(em('IMPORTANT! Be sure to enter nest observation records data AFTER nest location and summary data!')),
br(), br(),
fluidRow(
column(3, dateInput('dateNest', label = 'Date:',
value = '')),
column(3, selectizeInput('timeNest', 'Time:',
choices = choiceTimeOfDay,
selected = '')),
column(3, selectInput('stageNest', 'Stage:',
choices = nestStageChoices,
selected = '')),
column(3, selectInput('adAttNest', 'Adult attending:',
choices = nestAttendChoices,
selected = ''))),
fluidRow(
column(2, selectInput('nEggNest', '# egg:',
choices = c('', 0:10))),
column(2, selectInput('nYoungNest', '# yng:',
choices = c('', 0:10))),
column(6, textInput('notesNest',
'Notes: Building, age, fate, behavior, etc.')),
column(2, textInput('observerNest', 'Obs:'))),
fluidRow(column(1, ''),
column(3, actionButton("newNest",
"Clear fields",
class = 'btn-primary')),
column(2, ''),
column(3, actionButton('submitNest',
'Add record to table',
class = "btn-primary")))
),
width = 6, position = 'left'),
mainPanel(
fluidRow(
column(8,''),
column(4, imageOutput('birdBranch2', height = 55))
),
br(), textNest, width = 6, position = 'right')
),
h3(strong('3. Data-proofing and submission of nest records:')),
br(),
DT::dataTableOutput("responsesNest"),
br(),
fluidRow(column(1, ''),
column(4, actionButton("deleteNest",
"Delete nest record",
class = "btn-primary")),
column(3, ' '),
column(4, actionButton('saveNestData',
'Submit nest data',
class = "btn-primary"))
),
br(), shinyjs::hidden(
div(
id = "thankyou_msgNest",
h3("Thanks, your nest data have been recorded!")
)
),
br()
),
#-------------------------------------------------------------------------------*
# ---- UI TAB PANEL: HABITAT SURVEY ----
#-------------------------------------------------------------------------------*
tabPanel(strong('Habitat survey data'),
h1('Coming soon!'))
)
